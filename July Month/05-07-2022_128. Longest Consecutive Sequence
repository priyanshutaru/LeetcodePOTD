Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@222.....................Solution..................@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@22222


class Solution {
public:
    int update(unordered_map<int,int>& um,int& cur_num){
        if(um[cur_num] != 1){
            return um[cur_num];
        }
        int nxt_num = cur_num + 1;
        if(um.count(nxt_num)){
            um[cur_num] = 1 + update(um,nxt_num);
        }
        return um[cur_num];
    }
    
    int longestConsecutive(vector<int>& nums) {
        int max_ans = 1;
        if(nums.empty())return 0;
        unordered_map<int,int> um;
        for(auto num:nums)um[num] = 1;
        int cur_num;
        for(int i = 0 ; i < nums.size() ; i++){
            max_ans = max(max_ans,update(um,nums[i]));
        }
        return max_ans;
    }
};
