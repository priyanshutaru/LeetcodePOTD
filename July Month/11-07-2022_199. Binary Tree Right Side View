Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

 

Example 1:


Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]
Example 2:

Input: root = [1,null,3]
Output: [1,3]
Example 3:

Input: root = []
Output: []
 

Constraints:

The number of nodes in the tree is in the range [0, 100].
-100 <= Node.val <= 100



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@222................Solution........................@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

class Solution
{
    public:
        void func(TreeNode *root, vector<int> &v, int lvl)
        {

            if (root == NULL) return;

            if (v.size() < lvl) v.push_back(root->val);

            func(root->right, v, lvl + 1);

            func(root->left, v, lvl + 1);
        }

    vector<int> rightSideView(TreeNode *root)
    {

        vector<int> v;

        func(root, v, 1);

        return v;
    }
};
